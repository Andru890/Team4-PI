import cloneDeep from 'lodash.clonedeep';
import { render } from '../utils/render';
import { getAnalyticsOptions } from "../utils/analytics";
var HtmlImageLayer = /** @class */ (function () {
    function HtmlImageLayer(element, userCloudinaryImage, plugins, baseAnalyticsOptions) {
        var _this = this;
        this.isMounted = true;
        this.imgElement = element;
        this.htmlPluginState = { cleanupCallbacks: [], pluginEventSubscription: [] };
        var pluginCloudinaryImage = cloneDeep(userCloudinaryImage);
        render(element, pluginCloudinaryImage, plugins, this.htmlPluginState, baseAnalyticsOptions)
            .then(function (pluginResponse) {
            if (!_this.isMounted) {
                return;
            }
            _this.htmlPluginState.pluginEventSubscription.forEach(function (fn) { fn(); });
            var analyticsOptions = getAnalyticsOptions(baseAnalyticsOptions, pluginResponse);
            _this.imgElement.setAttribute('src', pluginCloudinaryImage.toURL(analyticsOptions));
        });
    }
    /**
     * Called when component is updated and re-triggers render
     * @param userCloudinaryImage
     * @param plugins
     * @param baseAnalyticsOptions
     */
    HtmlImageLayer.prototype.update = function (userCloudinaryImage, plugins, baseAnalyticsOptions) {
        var _this = this;
        var pluginCloudinaryImage = cloneDeep(userCloudinaryImage);
        render(this.imgElement, pluginCloudinaryImage, plugins, this.htmlPluginState)
            .then(function (pluginResponse) {
            if (!_this.isMounted) {
                return;
            }
            var featuredAnalyticsOptions = getAnalyticsOptions(baseAnalyticsOptions, pluginResponse);
            _this.imgElement.setAttribute('src', pluginCloudinaryImage.toURL(featuredAnalyticsOptions));
        });
    };
    HtmlImageLayer.prototype.unmount = function () {
        this.isMounted = false;
    };
    return HtmlImageLayer;
}());
export { HtmlImageLayer };
